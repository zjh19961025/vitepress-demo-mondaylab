import{_ as a,c as t,o as n,b0 as o}from"./chunks/framework.CF2ItCMi.js";const p="/zhujh-blog/assets/vue10.CeTimRPS.png",r="/zhujh-blog/assets/vue11.CyQmpq5C.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Growing/pnpm.md","filePath":"Growing/pnpm.md"}'),l={name:"Growing/pnpm.md"};function i(s,e,c,m,h,d){return n(),t("div",null,e[0]||(e[0]=[o('<h2 id="怎么在pnpm中修改node-modules并生效" tabindex="-1">怎么在pnpm中修改node_modules并生效 <a class="header-anchor" href="#怎么在pnpm中修改node-modules并生效" aria-label="Permalink to &quot;怎么在pnpm中修改node_modules并生效&quot;">​</a></h2><p>我在使用一个开源库的时候发现了一个bug，我目前着急解决这个问题，大家都知道官方解决一个问题，需要：cr-合并-发版，如果该开源库A是我使用的另一个开源库B引用的，那个还需去另外一个开源库提交BUG督促他们更新和发版，这样的流程是非常麻烦的。所以产生了该文档。</p><h2 id="解决思路" tabindex="-1">解决思路 <a class="header-anchor" href="#解决思路" aria-label="Permalink to &quot;解决思路&quot;">​</a></h2><p>直接修改<code>node_modules</code></p><h2 id="怎么生效" tabindex="-1">怎么生效 <a class="header-anchor" href="#怎么生效" aria-label="Permalink to &quot;怎么生效&quot;">​</a></h2><h3 id="如果使用的是pnpm包管理工具" tabindex="-1">如果使用的是pnpm包管理工具： <a class="header-anchor" href="#如果使用的是pnpm包管理工具" aria-label="Permalink to &quot;如果使用的是pnpm包管理工具：&quot;">​</a></h3><p>文档：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fpnpm.io%2Fcli%2Fpatch" target="_blank" rel="noreferrer">pnpm.io/cli/patch</a> 。 视频演示：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D0GjLqRGRbcY" target="_blank" rel="noreferrer">www.youtube.com/watch?v=0Gj…</a> 。</p><h5 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤&quot;">​</a></h5><ul><li>使用<code>pnpm patch &lt;pkg&gt; </code>其中是自己需要修改的包，需要明确指定版本号。</li><li>该命令会生成一个本地的地址，将该地址导入到你的编辑器。修改完成后执行<code>pnpm patch-commit &lt;地址&gt;</code></li><li><strong>最后一定要使用pnpm 执行命令，否则不生效</strong></li></ul><p>会生成一个临时的项目地址，在缓存文件中，打开它并修改，如图： <img src="'+p+'" alt="vue10.png"></p><p>打开项目后修改文件，使修改的文件生效： <img src="'+r+'" alt="vue11.png"></p>',11)]))}const g=a(l,[["render",i]]);export{_ as __pageData,g as default};
